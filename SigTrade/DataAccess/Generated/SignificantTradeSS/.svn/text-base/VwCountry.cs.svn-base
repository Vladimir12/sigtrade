using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SignificantTradeSS{
    /// <summary>
    /// Strongly-typed collection for the VwCountry class.
    /// </summary>
    [Serializable]
    public partial class VwCountryCollection : ReadOnlyList<VwCountry, VwCountryCollection>
    {        
        public VwCountryCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the vwCountries view.
    /// </summary>
    [Serializable]
    public partial class VwCountry : ReadOnlyRecord<VwCountry>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("vwCountries", TableType.View, DataService.GetInstance("SignificantTradeSS"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarCtyRecID = new TableSchema.TableColumn(schema);
                colvarCtyRecID.ColumnName = "CtyRecID";
                colvarCtyRecID.DataType = DbType.Int32;
                colvarCtyRecID.MaxLength = 0;
                colvarCtyRecID.AutoIncrement = false;
                colvarCtyRecID.IsNullable = false;
                colvarCtyRecID.IsPrimaryKey = false;
                colvarCtyRecID.IsForeignKey = false;
                colvarCtyRecID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyRecID);
                
                TableSchema.TableColumn colvarCtyISO3166 = new TableSchema.TableColumn(schema);
                colvarCtyISO3166.ColumnName = "CtyISO3166";
                colvarCtyISO3166.DataType = DbType.Boolean;
                colvarCtyISO3166.MaxLength = 0;
                colvarCtyISO3166.AutoIncrement = false;
                colvarCtyISO3166.IsNullable = false;
                colvarCtyISO3166.IsPrimaryKey = false;
                colvarCtyISO3166.IsForeignKey = false;
                colvarCtyISO3166.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyISO3166);
                
                TableSchema.TableColumn colvarCtyBru = new TableSchema.TableColumn(schema);
                colvarCtyBru.ColumnName = "CtyBru";
                colvarCtyBru.DataType = DbType.Boolean;
                colvarCtyBru.MaxLength = 0;
                colvarCtyBru.AutoIncrement = false;
                colvarCtyBru.IsNullable = false;
                colvarCtyBru.IsPrimaryKey = false;
                colvarCtyBru.IsForeignKey = false;
                colvarCtyBru.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyBru);
                
                TableSchema.TableColumn colvarCtyISO2 = new TableSchema.TableColumn(schema);
                colvarCtyISO2.ColumnName = "CtyISO2";
                colvarCtyISO2.DataType = DbType.String;
                colvarCtyISO2.MaxLength = 2;
                colvarCtyISO2.AutoIncrement = false;
                colvarCtyISO2.IsNullable = true;
                colvarCtyISO2.IsPrimaryKey = false;
                colvarCtyISO2.IsForeignKey = false;
                colvarCtyISO2.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyISO2);
                
                TableSchema.TableColumn colvarCtyISO3 = new TableSchema.TableColumn(schema);
                colvarCtyISO3.ColumnName = "CtyISO3";
                colvarCtyISO3.DataType = DbType.String;
                colvarCtyISO3.MaxLength = 3;
                colvarCtyISO3.AutoIncrement = false;
                colvarCtyISO3.IsNullable = true;
                colvarCtyISO3.IsPrimaryKey = false;
                colvarCtyISO3.IsForeignKey = false;
                colvarCtyISO3.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyISO3);
                
                TableSchema.TableColumn colvarCtyShort = new TableSchema.TableColumn(schema);
                colvarCtyShort.ColumnName = "CtyShort";
                colvarCtyShort.DataType = DbType.String;
                colvarCtyShort.MaxLength = 70;
                colvarCtyShort.AutoIncrement = false;
                colvarCtyShort.IsNullable = true;
                colvarCtyShort.IsPrimaryKey = false;
                colvarCtyShort.IsForeignKey = false;
                colvarCtyShort.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyShort);
                
                TableSchema.TableColumn colvarCtyLong = new TableSchema.TableColumn(schema);
                colvarCtyLong.ColumnName = "CtyLong";
                colvarCtyLong.DataType = DbType.String;
                colvarCtyLong.MaxLength = 70;
                colvarCtyLong.AutoIncrement = false;
                colvarCtyLong.IsNullable = true;
                colvarCtyLong.IsPrimaryKey = false;
                colvarCtyLong.IsForeignKey = false;
                colvarCtyLong.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyLong);
                
                TableSchema.TableColumn colvarCtyWCMCName = new TableSchema.TableColumn(schema);
                colvarCtyWCMCName.ColumnName = "CtyWCMCName";
                colvarCtyWCMCName.DataType = DbType.String;
                colvarCtyWCMCName.MaxLength = 70;
                colvarCtyWCMCName.AutoIncrement = false;
                colvarCtyWCMCName.IsNullable = true;
                colvarCtyWCMCName.IsPrimaryKey = false;
                colvarCtyWCMCName.IsForeignKey = false;
                colvarCtyWCMCName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyWCMCName);
                
                TableSchema.TableColumn colvarCtyFrench = new TableSchema.TableColumn(schema);
                colvarCtyFrench.ColumnName = "CtyFrench";
                colvarCtyFrench.DataType = DbType.String;
                colvarCtyFrench.MaxLength = 50;
                colvarCtyFrench.AutoIncrement = false;
                colvarCtyFrench.IsNullable = true;
                colvarCtyFrench.IsPrimaryKey = false;
                colvarCtyFrench.IsForeignKey = false;
                colvarCtyFrench.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyFrench);
                
                TableSchema.TableColumn colvarCtySpanish = new TableSchema.TableColumn(schema);
                colvarCtySpanish.ColumnName = "CtySpanish";
                colvarCtySpanish.DataType = DbType.String;
                colvarCtySpanish.MaxLength = 50;
                colvarCtySpanish.AutoIncrement = false;
                colvarCtySpanish.IsNullable = true;
                colvarCtySpanish.IsPrimaryKey = false;
                colvarCtySpanish.IsForeignKey = false;
                colvarCtySpanish.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtySpanish);
                
                TableSchema.TableColumn colvarCtyAdded = new TableSchema.TableColumn(schema);
                colvarCtyAdded.ColumnName = "CtyAdded";
                colvarCtyAdded.DataType = DbType.DateTime;
                colvarCtyAdded.MaxLength = 0;
                colvarCtyAdded.AutoIncrement = false;
                colvarCtyAdded.IsNullable = true;
                colvarCtyAdded.IsPrimaryKey = false;
                colvarCtyAdded.IsForeignKey = false;
                colvarCtyAdded.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyAdded);
                
                TableSchema.TableColumn colvarCtyModified = new TableSchema.TableColumn(schema);
                colvarCtyModified.ColumnName = "CtyModified";
                colvarCtyModified.DataType = DbType.DateTime;
                colvarCtyModified.MaxLength = 0;
                colvarCtyModified.AutoIncrement = false;
                colvarCtyModified.IsNullable = true;
                colvarCtyModified.IsPrimaryKey = false;
                colvarCtyModified.IsForeignKey = false;
                colvarCtyModified.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyModified);
                
                TableSchema.TableColumn colvarCtyByWho = new TableSchema.TableColumn(schema);
                colvarCtyByWho.ColumnName = "CtyByWho";
                colvarCtyByWho.DataType = DbType.Int32;
                colvarCtyByWho.MaxLength = 0;
                colvarCtyByWho.AutoIncrement = false;
                colvarCtyByWho.IsNullable = true;
                colvarCtyByWho.IsPrimaryKey = false;
                colvarCtyByWho.IsForeignKey = false;
                colvarCtyByWho.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyByWho);
                
                TableSchema.TableColumn colvarCtyParentISO3 = new TableSchema.TableColumn(schema);
                colvarCtyParentISO3.ColumnName = "CtyParentISO3";
                colvarCtyParentISO3.DataType = DbType.String;
                colvarCtyParentISO3.MaxLength = 3;
                colvarCtyParentISO3.AutoIncrement = false;
                colvarCtyParentISO3.IsNullable = true;
                colvarCtyParentISO3.IsPrimaryKey = false;
                colvarCtyParentISO3.IsForeignKey = false;
                colvarCtyParentISO3.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyParentISO3);
                
                TableSchema.TableColumn colvarCtyGerman = new TableSchema.TableColumn(schema);
                colvarCtyGerman.ColumnName = "CtyGerman";
                colvarCtyGerman.DataType = DbType.String;
                colvarCtyGerman.MaxLength = 70;
                colvarCtyGerman.AutoIncrement = false;
                colvarCtyGerman.IsNullable = true;
                colvarCtyGerman.IsPrimaryKey = false;
                colvarCtyGerman.IsForeignKey = false;
                colvarCtyGerman.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyGerman);
                
                TableSchema.TableColumn colvarCtyItalian = new TableSchema.TableColumn(schema);
                colvarCtyItalian.ColumnName = "CtyItalian";
                colvarCtyItalian.DataType = DbType.String;
                colvarCtyItalian.MaxLength = 70;
                colvarCtyItalian.AutoIncrement = false;
                colvarCtyItalian.IsNullable = true;
                colvarCtyItalian.IsPrimaryKey = false;
                colvarCtyItalian.IsForeignKey = false;
                colvarCtyItalian.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyItalian);
                
                TableSchema.TableColumn colvarCtySwedish = new TableSchema.TableColumn(schema);
                colvarCtySwedish.ColumnName = "CtySwedish";
                colvarCtySwedish.DataType = DbType.String;
                colvarCtySwedish.MaxLength = 70;
                colvarCtySwedish.AutoIncrement = false;
                colvarCtySwedish.IsNullable = true;
                colvarCtySwedish.IsPrimaryKey = false;
                colvarCtySwedish.IsForeignKey = false;
                colvarCtySwedish.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtySwedish);
                
                TableSchema.TableColumn colvarCtyDanish = new TableSchema.TableColumn(schema);
                colvarCtyDanish.ColumnName = "CtyDanish";
                colvarCtyDanish.DataType = DbType.String;
                colvarCtyDanish.MaxLength = 70;
                colvarCtyDanish.AutoIncrement = false;
                colvarCtyDanish.IsNullable = true;
                colvarCtyDanish.IsPrimaryKey = false;
                colvarCtyDanish.IsForeignKey = false;
                colvarCtyDanish.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyDanish);
                
                TableSchema.TableColumn colvarCtyGreek = new TableSchema.TableColumn(schema);
                colvarCtyGreek.ColumnName = "CtyGreek";
                colvarCtyGreek.DataType = DbType.String;
                colvarCtyGreek.MaxLength = 70;
                colvarCtyGreek.AutoIncrement = false;
                colvarCtyGreek.IsNullable = true;
                colvarCtyGreek.IsPrimaryKey = false;
                colvarCtyGreek.IsForeignKey = false;
                colvarCtyGreek.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyGreek);
                
                TableSchema.TableColumn colvarCtyFinnish = new TableSchema.TableColumn(schema);
                colvarCtyFinnish.ColumnName = "CtyFinnish";
                colvarCtyFinnish.DataType = DbType.String;
                colvarCtyFinnish.MaxLength = 70;
                colvarCtyFinnish.AutoIncrement = false;
                colvarCtyFinnish.IsNullable = true;
                colvarCtyFinnish.IsPrimaryKey = false;
                colvarCtyFinnish.IsForeignKey = false;
                colvarCtyFinnish.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyFinnish);
                
                TableSchema.TableColumn colvarCtyDutch = new TableSchema.TableColumn(schema);
                colvarCtyDutch.ColumnName = "CtyDutch";
                colvarCtyDutch.DataType = DbType.String;
                colvarCtyDutch.MaxLength = 70;
                colvarCtyDutch.AutoIncrement = false;
                colvarCtyDutch.IsNullable = true;
                colvarCtyDutch.IsPrimaryKey = false;
                colvarCtyDutch.IsForeignKey = false;
                colvarCtyDutch.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyDutch);
                
                TableSchema.TableColumn colvarCtyPortugese = new TableSchema.TableColumn(schema);
                colvarCtyPortugese.ColumnName = "CtyPortugese";
                colvarCtyPortugese.DataType = DbType.String;
                colvarCtyPortugese.MaxLength = 70;
                colvarCtyPortugese.AutoIncrement = false;
                colvarCtyPortugese.IsNullable = true;
                colvarCtyPortugese.IsPrimaryKey = false;
                colvarCtyPortugese.IsForeignKey = false;
                colvarCtyPortugese.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyPortugese);
                
                TableSchema.TableColumn colvarCtyNorwegian = new TableSchema.TableColumn(schema);
                colvarCtyNorwegian.ColumnName = "CtyNorwegian";
                colvarCtyNorwegian.DataType = DbType.String;
                colvarCtyNorwegian.MaxLength = 70;
                colvarCtyNorwegian.AutoIncrement = false;
                colvarCtyNorwegian.IsNullable = true;
                colvarCtyNorwegian.IsPrimaryKey = false;
                colvarCtyNorwegian.IsForeignKey = false;
                colvarCtyNorwegian.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyNorwegian);
                
                TableSchema.TableColumn colvarCtysids = new TableSchema.TableColumn(schema);
                colvarCtysids.ColumnName = "CTYSIDS";
                colvarCtysids.DataType = DbType.Boolean;
                colvarCtysids.MaxLength = 0;
                colvarCtysids.AutoIncrement = false;
                colvarCtysids.IsNullable = false;
                colvarCtysids.IsPrimaryKey = false;
                colvarCtysids.IsForeignKey = false;
                colvarCtysids.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtysids);
                
                TableSchema.TableColumn colvarCtyActive = new TableSchema.TableColumn(schema);
                colvarCtyActive.ColumnName = "CtyActive";
                colvarCtyActive.DataType = DbType.Boolean;
                colvarCtyActive.MaxLength = 0;
                colvarCtyActive.AutoIncrement = false;
                colvarCtyActive.IsNullable = false;
                colvarCtyActive.IsPrimaryKey = false;
                colvarCtyActive.IsForeignKey = false;
                colvarCtyActive.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyActive);
                
                TableSchema.TableColumn colvarCtyInactiveDate = new TableSchema.TableColumn(schema);
                colvarCtyInactiveDate.ColumnName = "CtyInactiveDate";
                colvarCtyInactiveDate.DataType = DbType.DateTime;
                colvarCtyInactiveDate.MaxLength = 0;
                colvarCtyInactiveDate.AutoIncrement = false;
                colvarCtyInactiveDate.IsNullable = true;
                colvarCtyInactiveDate.IsPrimaryKey = false;
                colvarCtyInactiveDate.IsForeignKey = false;
                colvarCtyInactiveDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyInactiveDate);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SignificantTradeSS"].AddSchema("vwCountries",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwCountry()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwCountry(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwCountry(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwCountry(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("CtyRecID")]
        [Bindable(true)]
        public int CtyRecID 
	    {
		    get
		    {
			    return GetColumnValue<int>("CtyRecID");
		    }
            set 
		    {
			    SetColumnValue("CtyRecID", value);
            }
        }
	      
        [XmlAttribute("CtyISO3166")]
        [Bindable(true)]
        public bool CtyISO3166 
	    {
		    get
		    {
			    return GetColumnValue<bool>("CtyISO3166");
		    }
            set 
		    {
			    SetColumnValue("CtyISO3166", value);
            }
        }
	      
        [XmlAttribute("CtyBru")]
        [Bindable(true)]
        public bool CtyBru 
	    {
		    get
		    {
			    return GetColumnValue<bool>("CtyBru");
		    }
            set 
		    {
			    SetColumnValue("CtyBru", value);
            }
        }
	      
        [XmlAttribute("CtyISO2")]
        [Bindable(true)]
        public string CtyISO2 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyISO2");
		    }
            set 
		    {
			    SetColumnValue("CtyISO2", value);
            }
        }
	      
        [XmlAttribute("CtyISO3")]
        [Bindable(true)]
        public string CtyISO3 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyISO3");
		    }
            set 
		    {
			    SetColumnValue("CtyISO3", value);
            }
        }
	      
        [XmlAttribute("CtyShort")]
        [Bindable(true)]
        public string CtyShort 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyShort");
		    }
            set 
		    {
			    SetColumnValue("CtyShort", value);
            }
        }
	      
        [XmlAttribute("CtyLong")]
        [Bindable(true)]
        public string CtyLong 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyLong");
		    }
            set 
		    {
			    SetColumnValue("CtyLong", value);
            }
        }
	      
        [XmlAttribute("CtyWCMCName")]
        [Bindable(true)]
        public string CtyWCMCName 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyWCMCName");
		    }
            set 
		    {
			    SetColumnValue("CtyWCMCName", value);
            }
        }
	      
        [XmlAttribute("CtyFrench")]
        [Bindable(true)]
        public string CtyFrench 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyFrench");
		    }
            set 
		    {
			    SetColumnValue("CtyFrench", value);
            }
        }
	      
        [XmlAttribute("CtySpanish")]
        [Bindable(true)]
        public string CtySpanish 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtySpanish");
		    }
            set 
		    {
			    SetColumnValue("CtySpanish", value);
            }
        }
	      
        [XmlAttribute("CtyAdded")]
        [Bindable(true)]
        public DateTime? CtyAdded 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CtyAdded");
		    }
            set 
		    {
			    SetColumnValue("CtyAdded", value);
            }
        }
	      
        [XmlAttribute("CtyModified")]
        [Bindable(true)]
        public DateTime? CtyModified 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CtyModified");
		    }
            set 
		    {
			    SetColumnValue("CtyModified", value);
            }
        }
	      
        [XmlAttribute("CtyByWho")]
        [Bindable(true)]
        public int? CtyByWho 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CtyByWho");
		    }
            set 
		    {
			    SetColumnValue("CtyByWho", value);
            }
        }
	      
        [XmlAttribute("CtyParentISO3")]
        [Bindable(true)]
        public string CtyParentISO3 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyParentISO3");
		    }
            set 
		    {
			    SetColumnValue("CtyParentISO3", value);
            }
        }
	      
        [XmlAttribute("CtyGerman")]
        [Bindable(true)]
        public string CtyGerman 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyGerman");
		    }
            set 
		    {
			    SetColumnValue("CtyGerman", value);
            }
        }
	      
        [XmlAttribute("CtyItalian")]
        [Bindable(true)]
        public string CtyItalian 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyItalian");
		    }
            set 
		    {
			    SetColumnValue("CtyItalian", value);
            }
        }
	      
        [XmlAttribute("CtySwedish")]
        [Bindable(true)]
        public string CtySwedish 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtySwedish");
		    }
            set 
		    {
			    SetColumnValue("CtySwedish", value);
            }
        }
	      
        [XmlAttribute("CtyDanish")]
        [Bindable(true)]
        public string CtyDanish 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyDanish");
		    }
            set 
		    {
			    SetColumnValue("CtyDanish", value);
            }
        }
	      
        [XmlAttribute("CtyGreek")]
        [Bindable(true)]
        public string CtyGreek 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyGreek");
		    }
            set 
		    {
			    SetColumnValue("CtyGreek", value);
            }
        }
	      
        [XmlAttribute("CtyFinnish")]
        [Bindable(true)]
        public string CtyFinnish 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyFinnish");
		    }
            set 
		    {
			    SetColumnValue("CtyFinnish", value);
            }
        }
	      
        [XmlAttribute("CtyDutch")]
        [Bindable(true)]
        public string CtyDutch 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyDutch");
		    }
            set 
		    {
			    SetColumnValue("CtyDutch", value);
            }
        }
	      
        [XmlAttribute("CtyPortugese")]
        [Bindable(true)]
        public string CtyPortugese 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyPortugese");
		    }
            set 
		    {
			    SetColumnValue("CtyPortugese", value);
            }
        }
	      
        [XmlAttribute("CtyNorwegian")]
        [Bindable(true)]
        public string CtyNorwegian 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyNorwegian");
		    }
            set 
		    {
			    SetColumnValue("CtyNorwegian", value);
            }
        }
	      
        [XmlAttribute("Ctysids")]
        [Bindable(true)]
        public bool Ctysids 
	    {
		    get
		    {
			    return GetColumnValue<bool>("CTYSIDS");
		    }
            set 
		    {
			    SetColumnValue("CTYSIDS", value);
            }
        }
	      
        [XmlAttribute("CtyActive")]
        [Bindable(true)]
        public bool CtyActive 
	    {
		    get
		    {
			    return GetColumnValue<bool>("CtyActive");
		    }
            set 
		    {
			    SetColumnValue("CtyActive", value);
            }
        }
	      
        [XmlAttribute("CtyInactiveDate")]
        [Bindable(true)]
        public DateTime? CtyInactiveDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CtyInactiveDate");
		    }
            set 
		    {
			    SetColumnValue("CtyInactiveDate", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string CtyRecID = @"CtyRecID";
            
            public static string CtyISO3166 = @"CtyISO3166";
            
            public static string CtyBru = @"CtyBru";
            
            public static string CtyISO2 = @"CtyISO2";
            
            public static string CtyISO3 = @"CtyISO3";
            
            public static string CtyShort = @"CtyShort";
            
            public static string CtyLong = @"CtyLong";
            
            public static string CtyWCMCName = @"CtyWCMCName";
            
            public static string CtyFrench = @"CtyFrench";
            
            public static string CtySpanish = @"CtySpanish";
            
            public static string CtyAdded = @"CtyAdded";
            
            public static string CtyModified = @"CtyModified";
            
            public static string CtyByWho = @"CtyByWho";
            
            public static string CtyParentISO3 = @"CtyParentISO3";
            
            public static string CtyGerman = @"CtyGerman";
            
            public static string CtyItalian = @"CtyItalian";
            
            public static string CtySwedish = @"CtySwedish";
            
            public static string CtyDanish = @"CtyDanish";
            
            public static string CtyGreek = @"CtyGreek";
            
            public static string CtyFinnish = @"CtyFinnish";
            
            public static string CtyDutch = @"CtyDutch";
            
            public static string CtyPortugese = @"CtyPortugese";
            
            public static string CtyNorwegian = @"CtyNorwegian";
            
            public static string Ctysids = @"CTYSIDS";
            
            public static string CtyActive = @"CtyActive";
            
            public static string CtyInactiveDate = @"CtyInactiveDate";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
