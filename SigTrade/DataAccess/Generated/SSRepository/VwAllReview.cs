using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SignificantTradeSSRepository{
    /// <summary>
    /// Strongly-typed collection for the VwAllReview class.
    /// </summary>
    [Serializable]
    public partial class VwAllReviewCollection : ReadOnlyList<VwAllReview, VwAllReviewCollection>
    {        
        public VwAllReviewCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the vwAllReviews view.
    /// </summary>
    [Serializable]
    public partial class VwAllReview : ReadOnlyRecord<VwAllReview>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("vwAllReviews", TableType.View, DataService.GetInstance("SSRepository"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
                colvarId.ColumnName = "ID";
                colvarId.DataType = DbType.Int32;
                colvarId.MaxLength = 0;
                colvarId.AutoIncrement = false;
                colvarId.IsNullable = false;
                colvarId.IsPrimaryKey = false;
                colvarId.IsForeignKey = false;
                colvarId.IsReadOnly = false;
                
                schema.Columns.Add(colvarId);
                
                TableSchema.TableColumn colvarPhaseDesc = new TableSchema.TableColumn(schema);
                colvarPhaseDesc.ColumnName = "PhaseDesc";
                colvarPhaseDesc.DataType = DbType.AnsiString;
                colvarPhaseDesc.MaxLength = 50;
                colvarPhaseDesc.AutoIncrement = false;
                colvarPhaseDesc.IsNullable = true;
                colvarPhaseDesc.IsPrimaryKey = false;
                colvarPhaseDesc.IsForeignKey = false;
                colvarPhaseDesc.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhaseDesc);
                
                TableSchema.TableColumn colvarCtyShort = new TableSchema.TableColumn(schema);
                colvarCtyShort.ColumnName = "CtyShort";
                colvarCtyShort.DataType = DbType.String;
                colvarCtyShort.MaxLength = 70;
                colvarCtyShort.AutoIncrement = false;
                colvarCtyShort.IsNullable = true;
                colvarCtyShort.IsPrimaryKey = false;
                colvarCtyShort.IsForeignKey = false;
                colvarCtyShort.IsReadOnly = false;
                
                schema.Columns.Add(colvarCtyShort);
                
                TableSchema.TableColumn colvarKingdom = new TableSchema.TableColumn(schema);
                colvarKingdom.ColumnName = "Kingdom";
                colvarKingdom.DataType = DbType.AnsiString;
                colvarKingdom.MaxLength = 100;
                colvarKingdom.AutoIncrement = false;
                colvarKingdom.IsNullable = true;
                colvarKingdom.IsPrimaryKey = false;
                colvarKingdom.IsForeignKey = false;
                colvarKingdom.IsReadOnly = false;
                
                schema.Columns.Add(colvarKingdom);
                
                TableSchema.TableColumn colvarTaxonType = new TableSchema.TableColumn(schema);
                colvarTaxonType.ColumnName = "TaxonType";
                colvarTaxonType.DataType = DbType.AnsiString;
                colvarTaxonType.MaxLength = 100;
                colvarTaxonType.AutoIncrement = false;
                colvarTaxonType.IsNullable = true;
                colvarTaxonType.IsPrimaryKey = false;
                colvarTaxonType.IsForeignKey = false;
                colvarTaxonType.IsReadOnly = false;
                
                schema.Columns.Add(colvarTaxonType);
                
                TableSchema.TableColumn colvarReviewDate = new TableSchema.TableColumn(schema);
                colvarReviewDate.ColumnName = "ReviewDate";
                colvarReviewDate.DataType = DbType.DateTime;
                colvarReviewDate.MaxLength = 0;
                colvarReviewDate.AutoIncrement = false;
                colvarReviewDate.IsNullable = true;
                colvarReviewDate.IsPrimaryKey = false;
                colvarReviewDate.IsForeignKey = false;
                colvarReviewDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarReviewDate);
                
                TableSchema.TableColumn colvarCommittee = new TableSchema.TableColumn(schema);
                colvarCommittee.ColumnName = "Committee";
                colvarCommittee.DataType = DbType.AnsiString;
                colvarCommittee.MaxLength = 100;
                colvarCommittee.AutoIncrement = false;
                colvarCommittee.IsNullable = true;
                colvarCommittee.IsPrimaryKey = false;
                colvarCommittee.IsForeignKey = false;
                colvarCommittee.IsReadOnly = false;
                
                schema.Columns.Add(colvarCommittee);
                
                TableSchema.TableColumn colvarReviewStatus = new TableSchema.TableColumn(schema);
                colvarReviewStatus.ColumnName = "ReviewStatus";
                colvarReviewStatus.DataType = DbType.AnsiString;
                colvarReviewStatus.MaxLength = 100;
                colvarReviewStatus.AutoIncrement = false;
                colvarReviewStatus.IsNullable = true;
                colvarReviewStatus.IsPrimaryKey = false;
                colvarReviewStatus.IsForeignKey = false;
                colvarReviewStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarReviewStatus);
                
                TableSchema.TableColumn colvarReviewType = new TableSchema.TableColumn(schema);
                colvarReviewType.ColumnName = "ReviewType";
                colvarReviewType.DataType = DbType.AnsiString;
                colvarReviewType.MaxLength = 100;
                colvarReviewType.AutoIncrement = false;
                colvarReviewType.IsNullable = true;
                colvarReviewType.IsPrimaryKey = false;
                colvarReviewType.IsForeignKey = false;
                colvarReviewType.IsReadOnly = false;
                
                schema.Columns.Add(colvarReviewType);
                
                TableSchema.TableColumn colvarParagraph = new TableSchema.TableColumn(schema);
                colvarParagraph.ColumnName = "Paragraph";
                colvarParagraph.DataType = DbType.AnsiString;
                colvarParagraph.MaxLength = 3;
                colvarParagraph.AutoIncrement = false;
                colvarParagraph.IsNullable = false;
                colvarParagraph.IsPrimaryKey = false;
                colvarParagraph.IsForeignKey = false;
                colvarParagraph.IsReadOnly = false;
                
                schema.Columns.Add(colvarParagraph);
                
                TableSchema.TableColumn colvarPhaseStartDate = new TableSchema.TableColumn(schema);
                colvarPhaseStartDate.ColumnName = "PhaseStartDate";
                colvarPhaseStartDate.DataType = DbType.DateTime;
                colvarPhaseStartDate.MaxLength = 0;
                colvarPhaseStartDate.AutoIncrement = false;
                colvarPhaseStartDate.IsNullable = true;
                colvarPhaseStartDate.IsPrimaryKey = false;
                colvarPhaseStartDate.IsForeignKey = false;
                colvarPhaseStartDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhaseStartDate);
                
                TableSchema.TableColumn colvarConcernID = new TableSchema.TableColumn(schema);
                colvarConcernID.ColumnName = "ConcernID";
                colvarConcernID.DataType = DbType.AnsiString;
                colvarConcernID.MaxLength = 4;
                colvarConcernID.AutoIncrement = false;
                colvarConcernID.IsNullable = false;
                colvarConcernID.IsPrimaryKey = false;
                colvarConcernID.IsForeignKey = false;
                colvarConcernID.IsReadOnly = false;
                
                schema.Columns.Add(colvarConcernID);
                
                TableSchema.TableColumn colvarDeadlineDate = new TableSchema.TableColumn(schema);
                colvarDeadlineDate.ColumnName = "DeadlineDate";
                colvarDeadlineDate.DataType = DbType.DateTime;
                colvarDeadlineDate.MaxLength = 0;
                colvarDeadlineDate.AutoIncrement = false;
                colvarDeadlineDate.IsNullable = true;
                colvarDeadlineDate.IsPrimaryKey = false;
                colvarDeadlineDate.IsForeignKey = false;
                colvarDeadlineDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeadlineDate);
                
                TableSchema.TableColumn colvarDateAdded = new TableSchema.TableColumn(schema);
                colvarDateAdded.ColumnName = "DateAdded";
                colvarDateAdded.DataType = DbType.DateTime;
                colvarDateAdded.MaxLength = 0;
                colvarDateAdded.AutoIncrement = false;
                colvarDateAdded.IsNullable = true;
                colvarDateAdded.IsPrimaryKey = false;
                colvarDateAdded.IsForeignKey = false;
                colvarDateAdded.IsReadOnly = false;
                
                schema.Columns.Add(colvarDateAdded);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["SSRepository"].AddSchema("vwAllReviews",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwAllReview()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwAllReview(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwAllReview(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwAllReview(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Id")]
        [Bindable(true)]
        public int Id 
	    {
		    get
		    {
			    return GetColumnValue<int>("ID");
		    }
            set 
		    {
			    SetColumnValue("ID", value);
            }
        }
	      
        [XmlAttribute("PhaseDesc")]
        [Bindable(true)]
        public string PhaseDesc 
	    {
		    get
		    {
			    return GetColumnValue<string>("PhaseDesc");
		    }
            set 
		    {
			    SetColumnValue("PhaseDesc", value);
            }
        }
	      
        [XmlAttribute("CtyShort")]
        [Bindable(true)]
        public string CtyShort 
	    {
		    get
		    {
			    return GetColumnValue<string>("CtyShort");
		    }
            set 
		    {
			    SetColumnValue("CtyShort", value);
            }
        }
	      
        [XmlAttribute("Kingdom")]
        [Bindable(true)]
        public string Kingdom 
	    {
		    get
		    {
			    return GetColumnValue<string>("Kingdom");
		    }
            set 
		    {
			    SetColumnValue("Kingdom", value);
            }
        }
	      
        [XmlAttribute("TaxonType")]
        [Bindable(true)]
        public string TaxonType 
	    {
		    get
		    {
			    return GetColumnValue<string>("TaxonType");
		    }
            set 
		    {
			    SetColumnValue("TaxonType", value);
            }
        }
	      
        [XmlAttribute("ReviewDate")]
        [Bindable(true)]
        public DateTime? ReviewDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ReviewDate");
		    }
            set 
		    {
			    SetColumnValue("ReviewDate", value);
            }
        }
	      
        [XmlAttribute("Committee")]
        [Bindable(true)]
        public string Committee 
	    {
		    get
		    {
			    return GetColumnValue<string>("Committee");
		    }
            set 
		    {
			    SetColumnValue("Committee", value);
            }
        }
	      
        [XmlAttribute("ReviewStatus")]
        [Bindable(true)]
        public string ReviewStatus 
	    {
		    get
		    {
			    return GetColumnValue<string>("ReviewStatus");
		    }
            set 
		    {
			    SetColumnValue("ReviewStatus", value);
            }
        }
	      
        [XmlAttribute("ReviewType")]
        [Bindable(true)]
        public string ReviewType 
	    {
		    get
		    {
			    return GetColumnValue<string>("ReviewType");
		    }
            set 
		    {
			    SetColumnValue("ReviewType", value);
            }
        }
	      
        [XmlAttribute("Paragraph")]
        [Bindable(true)]
        public string Paragraph 
	    {
		    get
		    {
			    return GetColumnValue<string>("Paragraph");
		    }
            set 
		    {
			    SetColumnValue("Paragraph", value);
            }
        }
	      
        [XmlAttribute("PhaseStartDate")]
        [Bindable(true)]
        public DateTime? PhaseStartDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("PhaseStartDate");
		    }
            set 
		    {
			    SetColumnValue("PhaseStartDate", value);
            }
        }
	      
        [XmlAttribute("ConcernID")]
        [Bindable(true)]
        public string ConcernID 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConcernID");
		    }
            set 
		    {
			    SetColumnValue("ConcernID", value);
            }
        }
	      
        [XmlAttribute("DeadlineDate")]
        [Bindable(true)]
        public DateTime? DeadlineDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("DeadlineDate");
		    }
            set 
		    {
			    SetColumnValue("DeadlineDate", value);
            }
        }
	      
        [XmlAttribute("DateAdded")]
        [Bindable(true)]
        public DateTime? DateAdded 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("DateAdded");
		    }
            set 
		    {
			    SetColumnValue("DateAdded", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Id = @"ID";
            
            public static string PhaseDesc = @"PhaseDesc";
            
            public static string CtyShort = @"CtyShort";
            
            public static string Kingdom = @"Kingdom";
            
            public static string TaxonType = @"TaxonType";
            
            public static string ReviewDate = @"ReviewDate";
            
            public static string Committee = @"Committee";
            
            public static string ReviewStatus = @"ReviewStatus";
            
            public static string ReviewType = @"ReviewType";
            
            public static string Paragraph = @"Paragraph";
            
            public static string PhaseStartDate = @"PhaseStartDate";
            
            public static string ConcernID = @"ConcernID";
            
            public static string DeadlineDate = @"DeadlineDate";
            
            public static string DateAdded = @"DateAdded";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
