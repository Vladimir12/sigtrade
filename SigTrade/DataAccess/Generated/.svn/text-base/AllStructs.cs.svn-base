using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SignificantTradeSS
{
	#region Tables Struct
	public partial struct Tables
	{
		
		public static readonly string ADistribCty = @"ADistribCty";
        
		public static readonly string AFamily = @"AFamily";
        
		public static readonly string AGenu = @"AGenus";
        
		public static readonly string AKingdom = @"AKingdom";
        
		public static readonly string ALegal = @"ALegal";
        
		public static readonly string AnimalsSpecy = @"AnimalsSpecies";
        
		public static readonly string ASpecy = @"ASpecies";
        
		public static readonly string AspnetApplication = @"aspnet_Applications";
        
		public static readonly string AspnetMembership = @"aspnet_Membership";
        
		public static readonly string AspnetPath = @"aspnet_Paths";
        
		public static readonly string AspnetPersonalizationAllUser = @"aspnet_PersonalizationAllUsers";
        
		public static readonly string AspnetPersonalizationPerUser = @"aspnet_PersonalizationPerUser";
        
		public static readonly string AspnetProfile = @"aspnet_Profile";
        
		public static readonly string AspnetRole = @"aspnet_Roles";
        
		public static readonly string AspnetSchemaVersion = @"aspnet_SchemaVersions";
        
		public static readonly string AspnetUser = @"aspnet_Users";
        
		public static readonly string AspnetUsersInRole = @"aspnet_UsersInRoles";
        
		public static readonly string AspnetWebEventEvent = @"aspnet_WebEvent_Events";
        
		public static readonly string ATaxClass = @"ATaxClass";
        
		public static readonly string ATaxOrder = @"ATaxOrder";
        
		public static readonly string ATaxPhylum = @"ATaxPhylum";
        
		public static readonly string Comment = @"Comments";
        
		public static readonly string CommitteeLib = @"CommitteeLib";
        
		public static readonly string Country = @"Country";
        
		public static readonly string Decision = @"Decisions";
        
		public static readonly string Document = @"Documents";
        
		public static readonly string GeneralLib = @"GeneralLib";
        
		public static readonly string MessageLog = @"MessageLog";
        
		public static readonly string MessageTemplate = @"MessageTemplate";
        
		public static readonly string ParagraphAction = @"ParagraphAction";
        
		public static readonly string ParagraphActionLib = @"ParagraphActionLib";
        
		public static readonly string PDistribCty = @"PDistribCty";
        
		public static readonly string PFamily = @"PFamily";
        
		public static readonly string PGenu = @"PGenus";
        
		public static readonly string Phase = @"Phase";
        
		public static readonly string PlantsSpecy = @"PlantsSpecies";
        
		public static readonly string PLegal = @"PLegal";
        
		public static readonly string PSpecy = @"PSpecies";
        
		public static readonly string Recommendation = @"Recommendations";
        
		public static readonly string ReviewStatus = @"ReviewStatus";
        
		public static readonly string TblMeetingLib = @"tblMeetingLib";
        
		public static readonly string TblPhase = @"tblPhase";
        
		public static readonly string TblReview = @"tblReview";
        
		public static readonly string TempPlant = @"tempPlants";
        
		public static readonly string UsersParagraphLink = @"UsersParagraphLink";
        
	}
	#endregion
    #region Schemas
    public partial class Schemas {
		
		public static TableSchema.Table ADistribCty
		{
            get { return DataService.GetSchema("ADistribCty", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AFamily
		{
            get { return DataService.GetSchema("AFamily", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AGenu
		{
            get { return DataService.GetSchema("AGenus", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AKingdom
		{
            get { return DataService.GetSchema("AKingdom", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table ALegal
		{
            get { return DataService.GetSchema("ALegal", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AnimalsSpecy
		{
            get { return DataService.GetSchema("AnimalsSpecies", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table ASpecy
		{
            get { return DataService.GetSchema("ASpecies", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AspnetApplication
		{
            get { return DataService.GetSchema("aspnet_Applications", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AspnetMembership
		{
            get { return DataService.GetSchema("aspnet_Membership", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AspnetPath
		{
            get { return DataService.GetSchema("aspnet_Paths", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AspnetPersonalizationAllUser
		{
            get { return DataService.GetSchema("aspnet_PersonalizationAllUsers", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AspnetPersonalizationPerUser
		{
            get { return DataService.GetSchema("aspnet_PersonalizationPerUser", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AspnetProfile
		{
            get { return DataService.GetSchema("aspnet_Profile", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AspnetRole
		{
            get { return DataService.GetSchema("aspnet_Roles", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AspnetSchemaVersion
		{
            get { return DataService.GetSchema("aspnet_SchemaVersions", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AspnetUser
		{
            get { return DataService.GetSchema("aspnet_Users", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AspnetUsersInRole
		{
            get { return DataService.GetSchema("aspnet_UsersInRoles", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table AspnetWebEventEvent
		{
            get { return DataService.GetSchema("aspnet_WebEvent_Events", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table ATaxClass
		{
            get { return DataService.GetSchema("ATaxClass", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table ATaxOrder
		{
            get { return DataService.GetSchema("ATaxOrder", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table ATaxPhylum
		{
            get { return DataService.GetSchema("ATaxPhylum", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table Comment
		{
            get { return DataService.GetSchema("Comments", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table CommitteeLib
		{
            get { return DataService.GetSchema("CommitteeLib", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table Country
		{
            get { return DataService.GetSchema("Country", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table Decision
		{
            get { return DataService.GetSchema("Decisions", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table Document
		{
            get { return DataService.GetSchema("Documents", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table GeneralLib
		{
            get { return DataService.GetSchema("GeneralLib", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table MessageLog
		{
            get { return DataService.GetSchema("MessageLog", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table MessageTemplate
		{
            get { return DataService.GetSchema("MessageTemplate", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table ParagraphAction
		{
            get { return DataService.GetSchema("ParagraphAction", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table ParagraphActionLib
		{
            get { return DataService.GetSchema("ParagraphActionLib", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table PDistribCty
		{
            get { return DataService.GetSchema("PDistribCty", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table PFamily
		{
            get { return DataService.GetSchema("PFamily", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table PGenu
		{
            get { return DataService.GetSchema("PGenus", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table Phase
		{
            get { return DataService.GetSchema("Phase", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table PlantsSpecy
		{
            get { return DataService.GetSchema("PlantsSpecies", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table PLegal
		{
            get { return DataService.GetSchema("PLegal", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table PSpecy
		{
            get { return DataService.GetSchema("PSpecies", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table Recommendation
		{
            get { return DataService.GetSchema("Recommendations", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table ReviewStatus
		{
            get { return DataService.GetSchema("ReviewStatus", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table TblMeetingLib
		{
            get { return DataService.GetSchema("tblMeetingLib", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table TblPhase
		{
            get { return DataService.GetSchema("tblPhase", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table TblReview
		{
            get { return DataService.GetSchema("tblReview", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table TempPlant
		{
            get { return DataService.GetSchema("tempPlants", "SignificantTradeSS"); }
		}
        
		public static TableSchema.Table UsersParagraphLink
		{
            get { return DataService.GetSchema("UsersParagraphLink", "SignificantTradeSS"); }
		}
        
	
    }
    #endregion
    #region View Struct
    public partial struct Views 
    {
		
		public static readonly string VwAspnetApplication = @"vw_aspnet_Applications";
        
		public static readonly string VwAspnetMembershipUser = @"vw_aspnet_MembershipUsers";
        
		public static readonly string VwAspnetProfile = @"vw_aspnet_Profiles";
        
		public static readonly string VwAspnetRole = @"vw_aspnet_Roles";
        
		public static readonly string VwAspnetUser = @"vw_aspnet_Users";
        
		public static readonly string VwAspnetUsersInRole = @"vw_aspnet_UsersInRoles";
        
		public static readonly string VwAspnetWebPartStatePath = @"vw_aspnet_WebPartState_Paths";
        
		public static readonly string VwAspnetWebPartStateShared = @"vw_aspnet_WebPartState_Shared";
        
		public static readonly string VwAspnetWebPartStateUser = @"vw_aspnet_WebPartState_User";
        
		public static readonly string VwADistribCty = @"vwADistribCty";
        
		public static readonly string VwAllReview = @"vwAllReviews";
        
		public static readonly string VwAnimalsTaxa = @"vwAnimalsTaxa";
        
		public static readonly string VwAnimalsTaxaOld = @"vwAnimalsTaxa_old";
        
		public static readonly string VwCountry = @"vwCountries";
        
		public static readonly string VwCountriesOld = @"vwCountries_old";
        
		public static readonly string VwDistribCty = @"vwDistribCty";
        
		public static readonly string VwGetAGenusSigtrade = @"vwGetAGenusSigtrade";
        
		public static readonly string VwPDistribCty = @"vwPDistribCty";
        
		public static readonly string VwPGenusSearchSigTrade = @"vwPGenusSearchSigTrade";
        
		public static readonly string VwPlantsTaxa = @"vwPlantsTaxa";
        
		public static readonly string VwPlantsTaxaOld = @"vwPlantsTaxa_old";
        
    }
    #endregion
    
    #region Query Factories
	public static partial class DB
	{
        public static DataProvider _provider = DataService.Providers["SignificantTradeSS"];
        static ISubSonicRepository _repository;
        public static ISubSonicRepository Repository 
        {
            get 
            {
                if (_repository == null)
                    return new SubSonicRepository(_provider);
                return _repository; 
            }
            set { _repository = value; }
        }
        public static Select SelectAllColumnsFrom<T>() where T : RecordBase<T>, new()
	    {
            return Repository.SelectAllColumnsFrom<T>();
	    }
	    public static Select Select()
	    {
            return Repository.Select();
	    }
	    
		public static Select Select(params string[] columns)
		{
            return Repository.Select(columns);
        }
	    
		public static Select Select(params Aggregate[] aggregates)
		{
            return Repository.Select(aggregates);
        }
   
	    public static Update Update<T>() where T : RecordBase<T>, new()
	    {
            return Repository.Update<T>();
	    }
	    
	    public static Insert Insert()
	    {
            return Repository.Insert();
	    }
	    
	    public static Delete Delete()
	    {
            return Repository.Delete();
	    }
	    
	    public static InlineQuery Query()
	    {
            return Repository.Query();
	    }
	    	    
	    
	}
    #endregion
    
}
// <auto-generated />
namespace SignificantTradeSSRepository
{
	#region Tables Struct
	public partial struct Tables
	{
		
		public static readonly string ADistribCty = @"ADistribCty";
        
		public static readonly string AFamily = @"AFamily";
        
		public static readonly string AGenu = @"AGenus";
        
		public static readonly string AKingdom = @"AKingdom";
        
		public static readonly string ALegal = @"ALegal";
        
		public static readonly string AnimalsSpecy = @"AnimalsSpecies";
        
		public static readonly string ASpecy = @"ASpecies";
        
		public static readonly string AspnetApplication = @"aspnet_Applications";
        
		public static readonly string AspnetMembership = @"aspnet_Membership";
        
		public static readonly string AspnetPath = @"aspnet_Paths";
        
		public static readonly string AspnetPersonalizationAllUser = @"aspnet_PersonalizationAllUsers";
        
		public static readonly string AspnetPersonalizationPerUser = @"aspnet_PersonalizationPerUser";
        
		public static readonly string AspnetProfile = @"aspnet_Profile";
        
		public static readonly string AspnetRole = @"aspnet_Roles";
        
		public static readonly string AspnetSchemaVersion = @"aspnet_SchemaVersions";
        
		public static readonly string AspnetUser = @"aspnet_Users";
        
		public static readonly string AspnetUsersInRole = @"aspnet_UsersInRoles";
        
		public static readonly string AspnetWebEventEvent = @"aspnet_WebEvent_Events";
        
		public static readonly string ATaxClass = @"ATaxClass";
        
		public static readonly string ATaxOrder = @"ATaxOrder";
        
		public static readonly string ATaxPhylum = @"ATaxPhylum";
        
		public static readonly string Comment = @"Comments";
        
		public static readonly string CommitteeLib = @"CommitteeLib";
        
		public static readonly string Country = @"Country";
        
		public static readonly string Decision = @"Decisions";
        
		public static readonly string Document = @"Documents";
        
		public static readonly string GeneralLib = @"GeneralLib";
        
		public static readonly string MessageLog = @"MessageLog";
        
		public static readonly string MessageTemplate = @"MessageTemplate";
        
		public static readonly string ParagraphAction = @"ParagraphAction";
        
		public static readonly string ParagraphActionLib = @"ParagraphActionLib";
        
		public static readonly string PDistribCty = @"PDistribCty";
        
		public static readonly string PFamily = @"PFamily";
        
		public static readonly string PGenu = @"PGenus";
        
		public static readonly string Phase = @"Phase";
        
		public static readonly string PlantsSpecy = @"PlantsSpecies";
        
		public static readonly string PLegal = @"PLegal";
        
		public static readonly string PSpecy = @"PSpecies";
        
		public static readonly string Recommendation = @"Recommendations";
        
		public static readonly string ReviewStatus = @"ReviewStatus";
        
		public static readonly string MeetingLib = @"tblMeetingLib";
        
		public static readonly string TblPhase = @"tblPhase";
        
		public static readonly string TblReview = @"tblReview";
        
		public static readonly string TempPlant = @"tempPlants";
        
		public static readonly string UsersParagraphLink = @"UsersParagraphLink";
        
	}
	#endregion
    #region Schemas
    public partial class Schemas {
		
		public static TableSchema.Table ADistribCty
		{
            get { return DataService.GetSchema("ADistribCty", "SSRepository"); }
		}
        
		public static TableSchema.Table AFamily
		{
            get { return DataService.GetSchema("AFamily", "SSRepository"); }
		}
        
		public static TableSchema.Table AGenu
		{
            get { return DataService.GetSchema("AGenus", "SSRepository"); }
		}
        
		public static TableSchema.Table AKingdom
		{
            get { return DataService.GetSchema("AKingdom", "SSRepository"); }
		}
        
		public static TableSchema.Table ALegal
		{
            get { return DataService.GetSchema("ALegal", "SSRepository"); }
		}
        
		public static TableSchema.Table AnimalsSpecy
		{
            get { return DataService.GetSchema("AnimalsSpecies", "SSRepository"); }
		}
        
		public static TableSchema.Table ASpecy
		{
            get { return DataService.GetSchema("ASpecies", "SSRepository"); }
		}
        
		public static TableSchema.Table AspnetApplication
		{
            get { return DataService.GetSchema("aspnet_Applications", "SSRepository"); }
		}
        
		public static TableSchema.Table AspnetMembership
		{
            get { return DataService.GetSchema("aspnet_Membership", "SSRepository"); }
		}
        
		public static TableSchema.Table AspnetPath
		{
            get { return DataService.GetSchema("aspnet_Paths", "SSRepository"); }
		}
        
		public static TableSchema.Table AspnetPersonalizationAllUser
		{
            get { return DataService.GetSchema("aspnet_PersonalizationAllUsers", "SSRepository"); }
		}
        
		public static TableSchema.Table AspnetPersonalizationPerUser
		{
            get { return DataService.GetSchema("aspnet_PersonalizationPerUser", "SSRepository"); }
		}
        
		public static TableSchema.Table AspnetProfile
		{
            get { return DataService.GetSchema("aspnet_Profile", "SSRepository"); }
		}
        
		public static TableSchema.Table AspnetRole
		{
            get { return DataService.GetSchema("aspnet_Roles", "SSRepository"); }
		}
        
		public static TableSchema.Table AspnetSchemaVersion
		{
            get { return DataService.GetSchema("aspnet_SchemaVersions", "SSRepository"); }
		}
        
		public static TableSchema.Table AspnetUser
		{
            get { return DataService.GetSchema("aspnet_Users", "SSRepository"); }
		}
        
		public static TableSchema.Table AspnetUsersInRole
		{
            get { return DataService.GetSchema("aspnet_UsersInRoles", "SSRepository"); }
		}
        
		public static TableSchema.Table AspnetWebEventEvent
		{
            get { return DataService.GetSchema("aspnet_WebEvent_Events", "SSRepository"); }
		}
        
		public static TableSchema.Table ATaxClass
		{
            get { return DataService.GetSchema("ATaxClass", "SSRepository"); }
		}
        
		public static TableSchema.Table ATaxOrder
		{
            get { return DataService.GetSchema("ATaxOrder", "SSRepository"); }
		}
        
		public static TableSchema.Table ATaxPhylum
		{
            get { return DataService.GetSchema("ATaxPhylum", "SSRepository"); }
		}
        
		public static TableSchema.Table Comment
		{
            get { return DataService.GetSchema("Comments", "SSRepository"); }
		}
        
		public static TableSchema.Table CommitteeLib
		{
            get { return DataService.GetSchema("CommitteeLib", "SSRepository"); }
		}
        
		public static TableSchema.Table Country
		{
            get { return DataService.GetSchema("Country", "SSRepository"); }
		}
        
		public static TableSchema.Table Decision
		{
            get { return DataService.GetSchema("Decisions", "SSRepository"); }
		}
        
		public static TableSchema.Table Document
		{
            get { return DataService.GetSchema("Documents", "SSRepository"); }
		}
        
		public static TableSchema.Table GeneralLib
		{
            get { return DataService.GetSchema("GeneralLib", "SSRepository"); }
		}
        
		public static TableSchema.Table MessageLog
		{
            get { return DataService.GetSchema("MessageLog", "SSRepository"); }
		}
        
		public static TableSchema.Table MessageTemplate
		{
            get { return DataService.GetSchema("MessageTemplate", "SSRepository"); }
		}
        
		public static TableSchema.Table ParagraphAction
		{
            get { return DataService.GetSchema("ParagraphAction", "SSRepository"); }
		}
        
		public static TableSchema.Table ParagraphActionLib
		{
            get { return DataService.GetSchema("ParagraphActionLib", "SSRepository"); }
		}
        
		public static TableSchema.Table PDistribCty
		{
            get { return DataService.GetSchema("PDistribCty", "SSRepository"); }
		}
        
		public static TableSchema.Table PFamily
		{
            get { return DataService.GetSchema("PFamily", "SSRepository"); }
		}
        
		public static TableSchema.Table PGenu
		{
            get { return DataService.GetSchema("PGenus", "SSRepository"); }
		}
        
		public static TableSchema.Table Phase
		{
            get { return DataService.GetSchema("Phase", "SSRepository"); }
		}
        
		public static TableSchema.Table PlantsSpecy
		{
            get { return DataService.GetSchema("PlantsSpecies", "SSRepository"); }
		}
        
		public static TableSchema.Table PLegal
		{
            get { return DataService.GetSchema("PLegal", "SSRepository"); }
		}
        
		public static TableSchema.Table PSpecy
		{
            get { return DataService.GetSchema("PSpecies", "SSRepository"); }
		}
        
		public static TableSchema.Table Recommendation
		{
            get { return DataService.GetSchema("Recommendations", "SSRepository"); }
		}
        
		public static TableSchema.Table ReviewStatus
		{
            get { return DataService.GetSchema("ReviewStatus", "SSRepository"); }
		}
        
		public static TableSchema.Table MeetingLib
		{
            get { return DataService.GetSchema("tblMeetingLib", "SSRepository"); }
		}
        
		public static TableSchema.Table TblPhase
		{
            get { return DataService.GetSchema("tblPhase", "SSRepository"); }
		}
        
		public static TableSchema.Table TblReview
		{
            get { return DataService.GetSchema("tblReview", "SSRepository"); }
		}
        
		public static TableSchema.Table TempPlant
		{
            get { return DataService.GetSchema("tempPlants", "SSRepository"); }
		}
        
		public static TableSchema.Table UsersParagraphLink
		{
            get { return DataService.GetSchema("UsersParagraphLink", "SSRepository"); }
		}
        
	
    }
    #endregion
    #region View Struct
    public partial struct Views 
    {
		
		public static readonly string VwAspnetApplication = @"vw_aspnet_Applications";
        
		public static readonly string VwAspnetMembershipUser = @"vw_aspnet_MembershipUsers";
        
		public static readonly string VwAspnetProfile = @"vw_aspnet_Profiles";
        
		public static readonly string VwAspnetRole = @"vw_aspnet_Roles";
        
		public static readonly string VwAspnetUser = @"vw_aspnet_Users";
        
		public static readonly string VwAspnetUsersInRole = @"vw_aspnet_UsersInRoles";
        
		public static readonly string VwAspnetWebPartStatePath = @"vw_aspnet_WebPartState_Paths";
        
		public static readonly string VwAspnetWebPartStateShared = @"vw_aspnet_WebPartState_Shared";
        
		public static readonly string VwAspnetWebPartStateUser = @"vw_aspnet_WebPartState_User";
        
		public static readonly string VwADistribCty = @"vwADistribCty";
        
		public static readonly string VwAllReview = @"vwAllReviews";
        
		public static readonly string VwAnimalsTaxa = @"vwAnimalsTaxa";
        
		public static readonly string VwAnimalsTaxaOld = @"vwAnimalsTaxa_old";
        
		public static readonly string VwCountry = @"vwCountries";
        
		public static readonly string VwCountriesOld = @"vwCountries_old";
        
		public static readonly string VwDistribCty = @"vwDistribCty";
        
		public static readonly string VwGetAGenusSigtrade = @"vwGetAGenusSigtrade";
        
		public static readonly string VwPDistribCty = @"vwPDistribCty";
        
		public static readonly string VwPGenusSearchSigTrade = @"vwPGenusSearchSigTrade";
        
		public static readonly string VwPlantsTaxa = @"vwPlantsTaxa";
        
		public static readonly string VwPlantsTaxaOld = @"vwPlantsTaxa_old";
        
    }
    #endregion
    
    #region Query Factories
	public static partial class DB
	{
        public static DataProvider _provider = DataService.Providers["SSRepository"];
        static ISubSonicRepository _repository;
        public static ISubSonicRepository Repository 
        {
            get 
            {
                if (_repository == null)
                    return new SubSonicRepository(_provider);
                return _repository; 
            }
            set { _repository = value; }
        }
        public static Select SelectAllColumnsFrom<T>() where T : RecordBase<T>, new()
	    {
            return Repository.SelectAllColumnsFrom<T>();
	    }
	    public static Select Select()
	    {
            return Repository.Select();
	    }
	    
		public static Select Select(params string[] columns)
		{
            return Repository.Select(columns);
        }
	    
		public static Select Select(params Aggregate[] aggregates)
		{
            return Repository.Select(aggregates);
        }
   
	    public static Update Update<T>() where T : RecordBase<T>, new()
	    {
            return Repository.Update<T>();
	    }
	    
	    public static Insert Insert()
	    {
            return Repository.Insert();
	    }
	    
	    public static Delete Delete()
	    {
            return Repository.Delete();
	    }
	    
	    public static InlineQuery Query()
	    {
            return Repository.Query();
	    }
	    	    
	    
	    #region Repository Compliance
	    
        public static T Get<T>(object primaryKeyValue) where T : RepositoryRecord<T>, new() 
        {
            return Repository.Get<T>(primaryKeyValue);
        }
        public static T Get<T>(string columnName, object columnValue) where T : RepositoryRecord<T>, new()
        {
            return Repository.Get<T>(columnName,columnValue);
        }
        
        public static void Delete<T>(string columnName, object columnValue) where T : RepositoryRecord<T>, new() 
        {
            Repository.Delete<T>(columnName, columnValue);            
        }
        public static void Delete<T>(RepositoryRecord<T> item) where T : RepositoryRecord<T>, new() 
        {
            Repository.Delete<T>(item);
        }
        public static void DeleteByKey<T>(object itemId) where T : RepositoryRecord<T>, new() 
        {
            Repository.DeleteByKey<T>(itemId);
        }
        public static void Destroy<T>(RepositoryRecord<T> item) where T : RepositoryRecord<T>, new() 
        {
            Repository.Destroy<T>(item);
        }
        
        public static void Destroy<T>(string columnName, object value) where T : RepositoryRecord<T>, new() 
        {
            Repository.Destroy<T>(columnName,value);
        }
        public static void DestroyByKey<T>(object itemId) where T : RepositoryRecord<T>, new() 
        {
            Repository.DestroyByKey<T>(itemId);
        }
        public static int Save<T>(RepositoryRecord<T> item) where T : RepositoryRecord<T>, new() 
        {
            return Repository.Save<T>(item);
        }
        
        public static int Save<T>(RepositoryRecord<T> item, string userName) where T : RepositoryRecord<T>, new()
        {
            return Repository.Save<T>(item,userName);
        }
        public static int SaveAll<ItemType, ListType>(RepositoryList<ItemType, ListType> itemList)
          where ItemType : RepositoryRecord<ItemType>, new()
          where ListType : RepositoryList<ItemType, ListType>, new()
        {
            return Repository.SaveAll<ItemType, ListType>(itemList);
        }
 
        public static int SaveAll<ItemType, ListType>(RepositoryList<ItemType, ListType> itemList, string userName)
          where ItemType : RepositoryRecord<ItemType>, new()
          where ListType : RepositoryList<ItemType, ListType>, new()
        {
            return Repository.SaveAll<ItemType, ListType>(itemList, userName);
        }
        public static int Update<T>(RepositoryRecord<T> item) where T : RepositoryRecord<T>, new() 
        {
            return Repository.Update<T>(item, "");
        }
        public static int Update<T>(RepositoryRecord<T> item, string userName) where T : RepositoryRecord<T>, new() 
        {
            return Repository.Update<T>(item, userName);
        }
        public static int Insert<T>(RepositoryRecord<T> item) where T : RepositoryRecord<T>, new() 
        {
            return Repository.Insert<T>(item);
        }
        public static int Insert<T>(RepositoryRecord<T> item, string userName) where T : RepositoryRecord<T>, new() 
        {
            return Repository.Insert<T>(item,userName);
        }
	    #endregion
        
	}
    #endregion
    
}
#region Databases
public partial struct Databases 
{
	
	public static readonly string SignificantTradeSS = @"SignificantTradeSS";
    
	public static readonly string SSRepository = @"SSRepository";
    
}
#endregion